$utilities: (
  "display": (
    "values": (
      "flex": flex,
      "inline-flex": inline-flex,
      "block": block,
      "inline": inline,
      "inline-block": inline-block,
      "grid": grid,
      "inline-grid": inline-grid,
      "flow-root": flow-root,
      "d-none": none,
      "contents": contents,
      "table": table,
      "table-row": table-row,
      "list-item": list-item,
    ),
  ),
  "padding": (
    "prefix": "p",
    "values": spacing-function($base-padding),
  ),
  "padding-left": (
    "prefix": "pl",
    "values": spacing-function($base-padding),
  ),
  "padding-right": (
    "prefix": "pr",
    "values": spacing-function($base-padding),
  ),
  "padding-top": (
    "prefix": "pt",
    "values": spacing-function($base-padding),
  ),
  "padding-bottom": (
    "prefix": "pb",
    "values": spacing-function($base-padding),
  ),
  "margin": (
    "prefix": "m",
    "values": spacing-function($base-margin),
  ),
  "margin-left": (
    "prefix": "ml",
    "values": spacing-function($base-margin),
  ),
  "margin-right": (
    "prefix": "mr",
    "values": spacing-function($base-margin),
  ),
  "margin-top": (
    "prefix": "mt",
    "values": spacing-function($base-margin),
  ),
  "margin-bottom": (
    "prefix": "mb",
    "values": spacing-function($base-margin),
  ),
  "border-radius": (
    "prefix": "rounded",
    "values": (
      "none": 0,
      "default": $base-border-radius,
      "full": 50%,
      "2": $base-border-radius * 2,
      "3": $base-border-radius * 3,
      "4": $base-border-radius * 4,
      "5": $base-border-radius * 5,
      "6": $base-border-radius * 6,
    ),
  ),
  "overflow": (
    "prefix": "overflow",
    "values": (
      "auto": auto,
      "hidden": hidden,
      "clip": clip,
      "visible": visible,
      "scroll": scroll,
    ),
  ),
  "overflow-x": (
    "prefix": "overflow-x",
    "values": (
      "auto": auto,
      "hidden": hidden,
      "clip": clip,
      "visible": visible,
      "scroll": scroll,
    ),
  ),
  "overflow-y": (
    "prefix": "overflow-y",
    "values": (
      "auto": auto,
      "hidden": hidden,
      "clip": clip,
      "visible": visible,
      "scroll": scroll,
    ),
  ),
  "position": (
    "values": (
      "static": static,
      "fixed": fixed,
      "absolute": absolute,
      "relative": relative,
      "sticky": sticky,
    ),
  ),
  "top": (
    "prefix": "top",
    "values": spacing-function($base-spacing),
  ),
  "bottom": (
    "prefix": "bottom",
    "values": spacing-function($base-spacing),
  ),
  "left": (
    "prefix": "left",
    "values": spacing-function($base-spacing),
  ),
  "right": (
    "prefix": "right",
    "values": spacing-function($base-spacing),
  ),
);

// generate utility classes
@each $property, $val in $utilities {
  $prefix: map-get($val, "prefix");
  $values: map-get($val, "values");

  @each $keyValue, $value in $values {
    @if ($prefix) {
      @if ($keyValue == "default") {
        .#{$prefix} {
          #{$property}: $value;
        }
        .hover-#{$prefix} {
          &:hover {
            #{$property}: $value;
          }
        }
        @each $responsive-prefix, $val in $breakpoints {
          @include responsive-layout($responsive-prefix) {
            .#{$responsive-prefix}-#{$prefix} {
              #{$property}: $value;
            }
          }
        }
      } @else {
        .#{$prefix}-#{$keyValue} {
          #{$property}: $value;
        }
        .hover-#{$prefix}-#{$keyValue} {
          &:hover {
            #{$property}: $value;
          }
        }
        @each $responsive-prefix, $val in $breakpoints {
          @include responsive-layout($responsive-prefix) {
            .#{$responsive-prefix}-#{$prefix}-#{$keyValue} {
              #{$property}: $value;
            }
          }
        }
      }
    } @else {
      .#{$keyValue} {
        #{$property}: $value;
      }
      .hover-#{$keyValue} {
        &:hover {
          #{$property}: $value;
        }
      }
      @each $responsive-prefix, $val in $breakpoints {
        @include responsive-layout($responsive-prefix) {
          .#{$responsive-prefix}-#{$keyValue} {
            #{$property}: $value;
          }
        }
      }
    }
  }
}
